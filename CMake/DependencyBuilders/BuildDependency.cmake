# Utility to build a dependency from source

macro(build_dependency)

    # Required to parallelize builds
    include(ProcessorCount)
    ProcessorCount(NCPUs)

    # Required for cloning
    find_package(Git REQUIRED QUIET)

    # Ensure the directory structure is set up
    file(MAKE_DIRECTORY "${CMAKE_SOURCE_DIR}/External")
    file(MAKE_DIRECTORY "${CMAKE_SOURCE_DIR}/External/Logs")
    file(MAKE_DIRECTORY "${CMAKE_SOURCE_DIR}/External/Products")

    # Add CMake Module Paths
    list(APPEND CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/CMake/DependencyBuilders")

    # Iterate the given name and call associated builder
    if("${ARGV}" STREQUAL OpenMP)
        include(BuildOpenMP)
        build_openmp()
    elseif("${ARGV}" STREQUAL Boost)
        include(BuildBoost)
        build_boost()
    elseif("${ARGV}" STREQUAL Eigen3)
        include(BuildEigen3)
        build_eigen3()
    elseif("${ARGV}" STREQUAL Imath)
        include(BuildImath)
        build_imath()
    elseif("${ARGV}" STREQUAL openjph)
        include(BuildOpenJPH)
        build_openjph()
    elseif("${ARGV}" STREQUAL OpenEXR)
        include(BuildOpenEXR)
        build_openexr()
    elseif("${ARGV}" STREQUAL TIFF)
        include(BuildTIFF)
        build_tiff()
        elseif("${ARGV}" STREQUAL JPEG)
        include(BuildJPEG)
        build_jpeg()
    elseif("${ARGV}" STREQUAL ZLIB)
        include(BuildZLIB)
        build_zlib()
    elseif("${ARGV}" STREQUAL PNG)
        include(BuildPNG)
        build_png()
    elseif("${ARGV}" STREQUAL Expat)
        include(BuildExpat)
        build_expat()
    elseif("${ARGV}" STREQUAL yaml-cpp)
        include(BuildYAML-CPP)
        build_yamlcpp()
    elseif("${ARGV}" STREQUAL pystring)
        include(BuildPystring)
        build_pystring()
    elseif("${ARGV}" STREQUAL OpenColorIO)
        include(BuildOpenColorIO)
        build_opencolorio()
    elseif("${ARGV}" STREQUAL OpenImageIO)
        include(BuildOpenImageIO)
        build_openimageio()
    elseif("${ARGV}" STREQUAL libyuv)
        include(BuildYUV)
        build_yuv()
    elseif("${ARGV}" STREQUAL AOM)
        include(BuildAOM)
        build_aom()
    elseif("${ARGV}" STREQUAL libavif)
        include(BuildAVIF)
        build_avif()
    elseif("${ARGV}" STREQUAL gflags)
        include(BuildGFLAGS)
        build_gflags()
    elseif("${ARGV}" STREQUAL glog)
        include(BuildGLOG)
        build_glog()
    elseif("${ARGV}" STREQUAL OpenJPEG)
        include(BuildOpenJPEG)
        build_openjpeg()
    elseif("${ARGV}" STREQUAL WebP)
        include(BuildWebP)
        build_webp()
    elseif("${ARGV}" STREQUAL absl)
        include(BuildAbseil)
        build_abseil()
    elseif("${ARGV}" STREQUAL SuiteSparse)
        include(BuildSuiteSparse)
        build_suitesparse()
    elseif("${ARGV}" STREQUAL Ceres)
        include(BuildCeres)
        build_ceres()
    elseif("${ARGV}" STREQUAL OpenCV)
        include(BuildOpenCV)
        build_opencv()
    elseif("${ARGV}" STREQUAL onnxruntime)
        include(BuildONNX)
        build_onnxruntime()
    elseif("${ARGV}" STREQUAL CoinUtils)
        include(BuildCoinUtils)
        build_coinutils()
    elseif("${ARGV}" STREQUAL Osi)
        include(BuildOsi)
        build_osi()
    elseif("${ARGV}" STREQUAL Clp)
        include(BuildClp)
        build_clp()
    elseif("${ARGV}" STREQUAL SOPLEX)
        include(BuildSoPLEX)
        build_soplex()
    elseif("${ARGV}" STREQUAL LEMON)
        include(BuildLEMON)
        build_lemon()
    elseif("${ARGV}" STREQUAL TBB)
        include(BuildOneTBB)
        build_onetbb()
    elseif("${ARGV}" STREQUAL CCTag)
        include(BuildCCTag)
        build_cctag()
    elseif("${ARGV}" STREQUAL apriltag)
        include(BuildAprilTag)
        build_apriltag()
    elseif("${ARGV}" STREQUAL PopSift)
        include(BuildPopSift)
        build_popsift()
    elseif("${ARGV}" STREQUAL lz4)
        include(Buildlz4)
        build_lz4()
    elseif("${ARGV}" STREQUAL flann)
        include(BuildFlann)
        build_flann()
    elseif("${ARGV}" STREQUAL nanoflann)
        include(Buildnanoflann)
        build_nanoflann()
    elseif("${ARGV}" STREQUAL OpenMesh)
        include(BuildOpenMesh)
        build_openmesh()
    elseif("${ARGV}" STREQUAL Geogram)
        include(BuildGeogram)
        build_geogram()
    elseif("${ARGV}" STREQUAL assimp)
        include(BuildAssimp)
        build_assimp()
    elseif("${ARGV}" STREQUAL Alembic)
        include(BuildAlembic)
        build_alembic()
    elseif("${ARGV}" STREQUAL opengv)
        include(BuildOpenGV)
        build_opengv()
    elseif("${ARGV}" STREQUAL XercesC)
        include(BuildXercesC)
        build_xercesc()
    elseif("${ARGV}" STREQUAL E57Format)
        include(BuildE57Format)
        build_e57format()
    elseif("${ARGV}" STREQUAL VulkanMemoryAllocator)
        include(BuildVulkanMemoryAllocator)
        build_vma()
    elseif("${ARGV}" STREQUAL fp16)
        include(BuildFP16)
        build_fp16()
    endif()

endmacro()